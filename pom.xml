<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.dontexist.kb</groupId>
    <artifactId>itranslator-unicode-epub-converter</artifactId>
    <version>1.0</version>
    <packaging>jar</packaging>
    <name>Itranslator99 Unicode ePub Converter</name>
    <description>A utility for converting ePubs with text in the Sanskrit99 and URW Palladio IT fonts to their Unicode
        equivalents.
    </description>
    <scm>
        <connection>scm:git:git@github.com:SirDap/itranslator99-to-unicode-epub-converter.git</connection>
        <url>scm:git:git@github.com:SirDap/itranslator99-to-unicode-epub-converter.git</url>
        <developerConnection>scm:git:git@github.com:SirDap/itranslator99-to-unicode-epub-converter.git
        </developerConnection>
    </scm>
    <properties>
        <java.version>1.8</java.version>
        <spring.framework.version>4.1.1.RELEASE</spring.framework.version>
        <slf4j.version>1.7.7</slf4j.version>
        <maven-clean-plugin.version>2.5</maven-clean-plugin.version>
        <maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
        <maven-failsafe-plugin.version>2.17</maven-failsafe-plugin.version>
        <maven-surefire-plugin.version>2.17</maven-surefire-plugin.version>
        <maven-shade-plugin.version>2.3</maven-shade-plugin.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <junit.version>4.11</junit.version>
        <log4j.version>1.2.14</log4j.version>
        <commons-io.version>1.3.2</commons-io.version>
        <zip4j.version>1.3.2</zip4j.version>
        <epublib-core.version>3.1</epublib-core.version>
        <commons-lang3.version>3.1</commons-lang3.version>
        <commons-collections4.version>4.0</commons-collections4.version>
        <epubcheck.version>v4.0.0-alpha4</epubcheck.version>
        <junit-addons.version>1.4</junit-addons.version>
        <buildnumber-maven-plugin.version>1.3</buildnumber-maven-plugin.version>
        <htmlparser.version>2.1</htmlparser.version>
        <cssparser.version>0.9.14</cssparser.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.framework.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>commons-logging</artifactId>
                    <groupId>commons-logging</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <!-- Jakarta Commons to slf4j adapter for Spring -->
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.htmlparser</groupId>
            <artifactId>htmlparser</artifactId>
            <version>${htmlparser.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>${commons-collections4.version}</version>
        </dependency>
        <dependency>
            <groupId>net.lingala.zip4j</groupId>
            <artifactId>zip4j</artifactId>
            <version>${zip4j.version}</version>
        </dependency>
        <dependency>
            <groupId>nl.siegmann.epublib</groupId>
            <artifactId>epublib-core</artifactId>
            <version>${epublib-core.version}</version>
            <exclusions>
                <exclusion>
                    <!-- Xmlpull duplicates the XmlPullParser class, already covered by net.sf.kxml:kxml2. Don't think we need MXParser from here... -->
                    <groupId>xmlpull</groupId>
                    <artifactId>xmlpull</artifactId>
                </exclusion>
                <!-- Exclude slf4j-simple so version can be upgraded -->
                <exclusion>
                    <artifactId>slf4j-simple</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>slf4j-api</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.idpf</groupId>
            <artifactId>epubcheck</artifactId>
            <version>${epubcheck.version}</version>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.cssparser</groupId>
            <artifactId>cssparser</artifactId>
            <version>${cssparser.version}</version>
        </dependency>

        <!-- TEST DEPENDENCIES -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- For file comparison asserting -->
            <groupId>junit-addons</groupId>
            <artifactId>junit-addons</artifactId>
            <version>${junit-addons.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <!-- excluding older JUnit 3.8.1 -->
                    <artifactId>junit</artifactId>
                    <groupId>junit</groupId>
                </exclusion>
                <!-- excluding xerces 2.6.2 jars because it creates conflict with epubCheck validation service -->
                <exclusion>
                    <artifactId>xercesImpl</artifactId>
                    <groupId>xerces</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>xmlParserAPIs</artifactId>
                    <groupId>xerces</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.framework.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>psiegman-repo</id>
            <url>https://github.com/psiegman/mvn-repo/raw/master/releases</url>
        </repository>
    </repositories>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>${buildnumber-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <shortRevisionLength>8</shortRevisionLength>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${maven-clean-plugin.version}</version>
                <configuration>
                    <failOnError>false</failOnError>
                </configuration>
                <executions>
                    <execution>
                        <id>auto-clean</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <junitArtifactName>junit:junit</junitArtifactName>
                    <!-- Set encoding for character conversion unit tests. Thanks to: http://carlobertoldi.wordpress.com/2012/03/12/maven-unit-tests-and-those-funny-characters/ -->
                    <argLine>-Dfile.encoding=UTF-8</argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>
                <configuration>
                    <junitArtifactName>junit:junit</junitArtifactName>
                    <!-- Set encoding for character conversion unit tests. Thanks to: http://carlobertoldi.wordpress.com/2012/03/12/maven-unit-tests-and-those-funny-characters/ -->
                    <argLine>-Dfile.encoding=UTF-8</argLine>
                </configuration>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>verify</id>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <finalName>${project.artifactId}-${project.version}-r${buildNumber}</finalName>
                    <archive>
                        <manifest>
                            <mainClass>org.dontexist.kb.EpubDriver</mainClass>
                        </manifest>
                        <manifestEntries>
                            <git-SHA-1>${buildNumber}</git-SHA-1>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>${maven-shade-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <finalName>${project.artifactId}-${project.version}-r${buildNumber}</finalName>
                    <!-- exclude manifest signatures from corrupting uber jar file -->
                    <filters>
                        <filter>
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>META-INF/*.SF</exclude>
                                <exclude>META-INF/*.DSA</exclude>
                                <exclude>META-INF/*.RSA</exclude>
                            </excludes>
                        </filter>
                    </filters>
                    <!-- append together, so that spring namespaces are found -->
                    <transformers>
                        <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                            <resource>META-INF/spring.handlers</resource>
                        </transformer>
                        <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                            <resource>META-INF/spring.schemas</resource>
                        </transformer>
                    </transformers>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
